# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    nailit_filesystem.class: Nailit\GalleryBundle\Entity\Filesystem
    nailit_code.class: Nailit\GalleryBundle\Entity\Code

    nailit_gallery_day_from_description: true #false
    nailit_gallery_separate_days: false #true
    nailit_main_path: krzys #gallery
    nailit_page_title: Krzyś i Zosia #GGG - Grzegorz Gwóźdź Gallery
    nailit_main_slogan: Oto jesteśmy! #Podróże, małe i duże
    nailit_sort_days: desc #asc

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    nailit_filesystem:
        class:     '%nailit_filesystem.class%'
        arguments: []
    nailit_code:
        class:     '%nailit_code.class%'
        arguments: ['%code.masterkey%']